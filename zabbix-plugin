#!/bin/sh

# Installation programm

ACTION=""
PLUGINS=""
INSTALLDIR="/etc/zabbix"
AGENT="True"
SERVER="True"

usage()
{
    echo "Zabbix plugin installer"
    echo ""
    echo "./zabbix-plugin -h|--help"
    echo "./zabbix-plugin list"
    echo "./zabbix-plugin [-dir=Zabbix_dir] [--no-server|--no-agent] install plugin1 plugin2 ..."
    echo ""
    echo "Install :"
    echo "\t--dir=Zabbix_dir : Set the Zabbix install directory"
    echo "\t--no-server      : Do not install Zabbix Server part"
    echo "\t--no-agent       : Do not install Zabbix Agent part"
    echo ""
}

listPlugins() {
    echo "List of available plugins :"
    for plugin in `ls -1 userparameter/* scripts/* | sed -e 's/^.*\/\([^/]*\)/\1/g' | sed -e 's/\.conf//g' | sort -u`
    do
        echo "- ${plugin}"
    done
}

installPlugins() {

    if [ "$PLUGINS" = "" ]; then
        usage
        exit 1
    fi

    if [ ! -d "${INSTALLDIR}" ]; then
        echo "Zabbix installation directory does not exist: ${INSTALLDIR}"
        echo "Check your install directory or change with --dir parameter"
        exit 1
    fi

    if [ ! -w "${INSTALLDIR}" ]; then
        echo "Zabbix installation directory is not writeable: ${INSTALLDIR}"
        echo "You do not have permission to install in this directory"
        exit 1
    fi

    for PLUGIN in $(echo "${PLUGINS}")
    do
        echo "Install plugin ${PLUGIN} to Zabbix"

        if [ -f "userparameter/${PLUGIN}.conf" -o -f "scripts/${PLUGIN}" ]; then
            if [ "${AGENT}" = "True" ]; then
                installUserparameter "${PLUGIN}"
                installScript "${PLUGIN}"
            fi
            if [ "${SERVER}" = "True" ]; then
                installItemsDB "${PLUGIN}"
            fi
        else
            echo "Plugin not found"
        fi
    done
}

installUserparameter() {
    PLUGIN=$1

    if [ -f "userparameter/${PLUGIN}.conf" ]; then

        printf "%s" "- Installing plugin userparameter (agent) : "
        ORI=$(echo "/etc/zabbix" | sed -e 's/\//\\\//g')
        DEF=$(echo "${INSTALLDIR}" | sed -e 's/\//\\\//g')

        sed -e "s/${ORI}/${DEF}/g" "userparameter/${PLUGIN}.conf" > "${INSTALLDIR}/zabbix_agentd.conf.d/${PLUGIN}.conf"
        if [ $? -eq 0 ]; then
            printf "[ \033[32m%s\033[37m ]\n" "OK"
        else
            printf "[ \033[31m%s\033[37m ]\n" "KO"
        fi

    fi
}

installScript() {
    PLUGIN=$1

    if [ -f "scripts/${PLUGIN}" ]; then

        printf "%s" "- Installing plugin script (agent)        : "

        if [ ! -d "${INSTALLDIR}/zabbix_agentd_scripts" ]; then
            mkdir -p "${INSTALLDIR}/zabbix_agentd_scripts"
            if [ $? -ne 0 ]; then
                printf "[ \033[31m%s\033[37m ]\n" "KO"
               return $?
            fi
        fi

        cp "scripts/${PLUGIN}" "${INSTALLDIR}/zabbix_agentd_scripts" 2>/dev/null
        if [ $? -eq 0 ]; then
            printf "[ \033[32m%s\033[37m ]\n" "OK"
        else
            printf "[ \033[31m%s\033[37m ]\n" "KO"
        fi

    fi

}

reset() {
    Command=""
    Type=0
    Desciption=""
    Value=""
}

installItemsDB() {

    if [ -f "userparameter/${PLUGIN}.conf" -a -f "${INSTALLDIR}/zabbix_server.conf" ]; then

        TMP="/tmp/zabbix-${PLUGIN}-itemskeys.sql"

        rm -f "${TMP}"

        while read line
        do

            KEY=$(echo "$line" | sed -e 's/^#\s*\([a-zA-Z0-9]*\)\s*:\s*\(.*\)$/\1/g')
            VAL=$(echo "$line" | sed -e 's/^#\s*\([a-zA-Z0-9]*\)\s*:\s*\(.*\)$/\2/g')

            if [ "$KEY" != "$VAL" ]; then
                eval "${KEY}='$VAL'"
            else
                reset
            fi

            if [ "$Command" != "" -a "$Type" != "" -a "$Description" != "" -a "$Value" != "" ]; then

                echo "INSERT INTO help_items" >> "${TMP}"
                echo "    (itemtype, key_, description)" >> "${TMP}"
                echo "VALUES" >> "${TMP}"
                echo "    (${Type}, '${Command}', '${Description} - ${Value}')" >> "${TMP}"
                echo "ON DUPLICATE KEY UPDATE" >> "${TMP}"
                echo "    itemtype    = VALUES(itemtype)," >> "${TMP}"
                echo "    description = VALUES(description);" >> "${TMP}"
                echo "" >> "${TMP}"

                reset
            fi

        done < "userparameter/${PLUGIN}.conf"

        if [ -f "${TMP}" ]; then
            printf "%s" "- Installing items keys (server)          : "

            DBHost=$(cat "${INSTALLDIR}/zabbix_server.conf" | grep -v "#" | grep "DBHost" | sed -e 's/^\s*DB[a-zA-Z0-9]*\s*=\s*\(.*\)\s*$/\1/g')
            DBName=$(cat "${INSTALLDIR}/zabbix_server.conf" | grep -v "#" | grep "DBName" | sed -e 's/^\s*DB[a-zA-Z0-9]*\s*=\s*\(.*\)\s*$/\1/g')
            DBUser=$(cat "${INSTALLDIR}/zabbix_server.conf" | grep -v "#" | grep "DBUser" | sed -e 's/^\s*DB[a-zA-Z0-9]*\s*=\s*\(.*\)\s*$/\1/g')
            DBPassword=$(cat "${INSTALLDIR}/zabbix_server.conf" | grep -v "#" | grep "DBPassword" | sed -e 's/^\s*DB[a-zA-Z0-9]*\s*=\s*\(.*\)\s*$/\1/g')

            mysql -h"${DBHost}" -u"${DBUser}" -p"${DBPassword}" "${DBName}" 2>&1 1>/dev/null < "${TMP}"
            if [ $? -eq 0 ]; then
               printf "[ \033[32m%s\033[37m ]\n" "OK"
            else
                printf "[ \033[31m%s\033[37m ]\n" "KO"
            fi

            rm -f "${TMP}"

        fi

    fi

}


while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        "-h" | "--help")
            usage
            exit 0
            ;;
        "--dir")
            INSTALLDIR="$VALUE"
            ;;
        "--no-server")
            SERVER="False"
            ;;
        "--no-agent")
            AGENT="False"
            ;;
        "list")
            ACTION="list"
            ;;
        "install")
            ACTION="install"
            ;;
        *)
            PLUGINS="${PLUGINS} ${PARAM}"
            ;;
    esac
    shift
done

case $ACTION in
    "list")
        listPlugins
        ;;
    "install")
        if [ "${AGENT}" != "True" -a "${SERVER}" != "True" ]; then
            usage
            exit 1
        fi
        installPlugins
        ;;
    *)
        usage
        exit 1
        ;;
esac

exit 0
